#!/bin/bash

# check userdata partition
if [ ! -f /tmp/userdata_ok ]; then
   touch /tmp/userdata_ok

    TESTFILE="/userdata/.test_write"
    touch "$TESTFILE"

    if [ ! -f "$TESTFILE" ]; then
       fbdisplay /mnt/SDCARD/miyoo355/app/userdata.png &
       mkfs.ext4 -L userdata /dev/mtdblock4
       sync
	   sleep 10
       reboot
    else
       rm $TESTFILE
    fi
fi

# sdcard mount in the last firmware
if [ ! -f /tmp/remountsd ]; then
   touch /tmp/remountsd
   if [ ! -d /media/sdcard0/miyoo355 ]; then
      TARGET_VERSION_FILE=$(cat /usr/miyoo/version)
      if [ $TARGET_VERSION_FILE == "20250527210639" ]; then
         cp /media/sdcard1/miyoo355/app/remount-sdcard.sh /tmp/remount-sdcard.sh
         chmod a+x /tmp/remount-sdcard.sh
         /tmp/remount-sdcard.sh &
         exit 0
      fi
   fi
fi

export SDCARD_PATH="/mnt/SDCARD"
export HOME="${SDCARD_PATH}"
export SWAPFILE="${SDCARD_PATH}/cachefile"
export PATH="/mnt/SDCARD/miyoo355/bin:/usr/miyoo/bin:/usr/bin:/usr/sbin"
export LD_LIBRARY_PATH="/mnt/SDCARD/miyoo355/lib:/usr/miyoo/lib:/usr/lib"
export USER=root

if [ ! -f /tmp/profilemount ]; then
   mount -o bind /mnt/SDCARD/miyoo355/app/profile /etc/profile
   touch /tmp/profilemount
fi

if [ ! -f /tmp/mountsdcard1 ]; then
   if [ -d /media/sdcard1/Roms ]; then
      mount -o bind /media/sdcard1/Roms /mnt/sdcard/Roms
      touch /mnt/mountsdcard1
   fi
fi

#set cores
#enable core 1, disable 0.
echo ondemand > /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor
echo 1104000 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq
echo 1104000 > /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq
echo 1 > /sys/devices/system/cpu/cpu0/online
echo 1 > /sys/devices/system/cpu/cpu1/online
echo 0 > /sys/devices/system/cpu/cpu3/online
echo 0 > /sys/devices/system/cpu/cpu2/online

#set gpu
echo dmc_ondemand > /sys/class/devfreq/dmc/governor

#create cpuconfig file
OUTFILE="/userdata/cpuconfig.cfg"

if [ ! -f "$OUTFILE" ]; then
CPU_GOVERNOR=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 2>/dev/null)
CPU_MAX=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq 2>/dev/null)
CPU_MIN=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq 2>/dev/null)
CPU_0=$(cat /sys/devices/system/cpu/cpu0/online 2>/dev/null)
CPU_1=$(cat /sys/devices/system/cpu/cpu1/online 2>/dev/null)
CPU_2=$(cat /sys/devices/system/cpu/cpu2/online 2>/dev/null)
CPU_3=$(cat /sys/devices/system/cpu/cpu3/online 2>/dev/null)
GPU_GOVERNOR=$(cat /sys/class/devfreq/dmc/governor 2>/dev/null)

cat <<EOF > "$OUTFILE"
CPU_GOVERNOR=$CPU_GOVERNOR
CPU_MAX=$CPU_MAX
CPU_MIN=$CPU_MIN
CPU_0=$CPU_0
CPU_1=$CPU_1
CPU_2=$CPU_2
CPU_3=$CPU_3
GPU_GOVERNOR=$GPU_GOVERNOR
EOF
fi

# check swap size
if [ ! -f "/tmp/swapck" ]; then
   if [ -f "${SWAPFILE}" ]; then
      SWAPSIZE=$(ls -l "${SWAPFILE}" | awk '{print $5}')
      MINSIZE=$((512 * 1024 * 1024))

      if [ "$SWAPSIZE" -ne "$MINSIZE" ]; then
	     rm "${SWAPFILE}"
      fi
      touch /tmp/swapck
   fi
fi

# Enable swap
if [ ! -f "${SWAPFILE}" ]; then
    fbdisplay /mnt/SDCARD/miyoo355/app/config.png &
	dd if=/dev/zero of="${SWAPFILE}" bs=1M count=512
	mkswap "${SWAPFILE}"
	sync
fi

if [ ! -f "/tmp/swapfileon" ]; then
    swapon "${SWAPFILE}"
	echo 10 > /proc/sys/vm/swappiness
	touch /tmp/swapfileon
	sync
fi

# Make keys ssh

rsa_key="/userdata/dropbear_rsa_host_key"
ecdsa_key="/userdata/dropbear_ecdsa_host_key"
ed25519_key="/userdata/dropbear_ed25519_host_key"

if [ ! -f "$rsa_key" ]; then
    dropbearkey -t rsa -f "$rsa_key"
fi

if [ ! -f "$ecdsa_key" ]; then
    dropbearkey -t ecdsa -f "$ecdsa_key"
fi

if [ ! -f "$ed25519_key" ]; then
    dropbearkey -t ed25519 -f "$ed25519_key"
fi

if [ ! -f /tmp/sshmount ]; then
   mount -o bind /mnt/SDCARD/miyoo355/etc/passwd /etc/passwd
   mount -o bind /mnt/SDCARD/miyoo355/etc/group /etc/group
   mount -o bind /mnt/SDCARD/miyoo355/etc/shadow /etc/shadow
   touch /tmp/sshmount
fi

if [ ! -f "/tmp/timezone" ]; then
   if [ ! -f "/data/timezone" ]; then
	  touch /data/timezone
   fi

   tz_value=$(grep '"timezone"' /mnt/SDCARD/system.json | sed -E 's/.*"timezone"[[:space:]]*:[[:space:]]*"([^"]*)".*/\1/')

   if [ -f "/data/timezone" ]; then
      echo "$tz_value" > /data/timezone
	  touch /tmp/timezone
   fi
fi

#scrap
if [ ! -f "/userdata/keyscraper.txt" ]; then
   touch /userdata/keyscraper.txt
   echo uhdsjndoujahfjdnfgjdfunsaofugasufaslonf > /userdata/keyscraper.txt
fi

runifnecessary(){
    cnt=0
    #a=`ps | grep $1 | grep -v grep`
    a=`pgrep $1`
    while [ "$a" == "" ] && [ $cnt -lt 8 ] ; do 
       echo try to run $2 `cat /proc/uptime`
       $2 $3 &
       sleep 0.5
	   cnt=`expr $cnt + 1`
       a=`pgrep $1`
    done
}

runifnecessary "controlmon" /mnt/SDCARD/miyoo355/bin/controlmon
#keykill MainUI
#run launcher
if [ ! -f /tmp/loadingset ]; then
   pkill -9 fbdisplay
   hdmipugin=`cat /sys/class/drm/card0-HDMI-A-1/status`
   if [ "$hdmipugin" == "connected" ] ; then
      fbdisplay /mnt/SDCARD/miyoo355/app/loading_1080p.png &
	  touch /tmp/loadingset
   else
      fbdisplay /mnt/SDCARD/miyoo355/app/loading.png &
	  touch /tmp/loadingset
   fi
fi

killall -9 gptokeyb
killall -9 gptokeyb2

/mnt/SDCARD/miyoo355/app/Main
sync
