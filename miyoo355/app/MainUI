#!/bin/bash

export SDCARD_PATH="/mnt/SDCARD"
export HOME="${SDCARD_PATH}"
export SWAPFILE="${SDCARD_PATH}/cachefile"
export PATH="/mnt/SDCARD/miyoo355/bin:/usr/miyoo/bin:/usr/bin:/usr/sbin"
export LD_LIBRARY_PATH="/mnt/SDCARD/miyoo355/lib:/usr/miyoo/lib:/usr/lib"
export USER=root

if [ ! -f /tmp/profilemount ]; then
mount -o bind /mnt/SDCARD/miyoo355/app/profile /etc/profile
touch /tmp/profilemount
fi

#set cores
#enable core 1, disable 0.
echo 1 > /sys/devices/system/cpu/cpu0/online
echo 1 > /sys/devices/system/cpu/cpu1/online
echo 1 > /sys/devices/system/cpu/cpu3/online
echo 1 > /sys/devices/system/cpu/cpu2/online

# check swap size
if [ ! -f "/tmp/swapck" ]; then
if [ -f "${SWAPFILE}" ]; then
SWAPSIZE=$(ls -l "${SWAPFILE}" | awk '{print $5}')
MINSIZE=$((512 * 1024 * 1024))

if [ "$SWAPSIZE" -ne "$MINSIZE" ]; then
	rm "${SWAPFILE}"
fi
touch /tmp/swapck
fi
fi

# Enable swap
if [ ! -f "${SWAPFILE}" ]; then
	dd if=/dev/zero of="${SWAPFILE}" bs=1M count=512
	mkswap "${SWAPFILE}"
	sync
fi

if [ ! -f "/tmp/swapfileon" ]; then
    swapon "${SWAPFILE}"
	echo 10 > /proc/sys/vm/swappiness
	touch /tmp/swapfileon
	sync
fi

# Make keys ssh

rsa_key="/userdata/dropbear_rsa_host_key"
ecdsa_key="/userdata/dropbear_ecdsa_host_key"
ed25519_key="/userdata/dropbear_ed25519_host_key"

if [ ! -f "$rsa_key" ]; then
    dropbearkey -t rsa -f "$rsa_key"
fi

if [ ! -f "$ecdsa_key" ]; then
    dropbearkey -t ecdsa -f "$ecdsa_key"
fi

if [ ! -f "$ed25519_key" ]; then
    dropbearkey -t ed25519 -f "$ed25519_key"
fi

if [ ! -f /tmp/sshmount ]; then
mount -o bind /mnt/SDCARD/miyoo355/etc/passwd /etc/passwd
mount -o bind /mnt/SDCARD/miyoo355/etc/group /etc/group
mount -o bind /mnt/SDCARD/miyoo355/etc/shadow /etc/shadow
touch /tmp/sshmount
fi

if [ ! -f "/tmp/timezone" ]; then
if [ ! -f "/data/timezone" ]; then
	touch /data/timezone
fi

tz_value=$(grep '"timezone"' /mnt/SDCARD/system.json | sed -E 's/.*"timezone"[[:space:]]*:[[:space:]]*"([^"]*)".*/\1/')

if [ -f "/data/timezone" ]; then
    echo "$tz_value" > /data/timezone
	touch /tmp/timezone
fi
fi

runifnecessary(){
    cnt=0
    #a=`ps | grep $1 | grep -v grep`
    a=`pgrep $1`
    while [ "$a" == "" ] && [ $cnt -lt 8 ] ; do 
       echo try to run $2 `cat /proc/uptime`
       $2 $3 &
       sleep 0.5
	   cnt=`expr $cnt + 1`
       a=`pgrep $1`
    done
}

runifnecessary "controlmon" /mnt/SDCARD/miyoo355/bin/controlmon
#keykill MainUI
#run launcher
/usr/miyoo/bin/MainUI
sync
